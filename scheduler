<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Light When2Meet Clone</title>
  <script src="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js"></script>
  <style>
    body { font-family: Arial; padding: 20px; }
    label { display: block; margin-top: 10px; }
    .grid { display: grid; grid-template-columns: repeat(4, 1fr); gap: 4px; margin-top: 20px; }
    .block {
      border: 1px solid #ccc;
      padding: 5px;
      text-align: center;
      cursor: pointer;
      background-color: #eee;
    }
    .block.selected {
      background-color: #66cc66;
    }
  </style>
</head>
<body>

<h2>Create Availability Grid</h2>

<label>
  Event Timezone:
  <select id="eventTimezone"></select>
</label>

<label>
  Event Date (single day for demo):
  <input type="date" id="eventDate" />
</label>

<hr />

<h3>Participant Availability</h3>

<label>
  Your Name:
  <input type="text" id="participantName" />
</label>

<label>
  Your Timezone:
  <select id="participantTimezone"></select>
</label>

<div id="grid" class="grid"></div>

<script>
  const DateTime = luxon.DateTime;
  const allZones = luxon.IANAZone.isValidZone;

  // Populate timezone dropdowns
  const timezones = luxon.IANAZone.isValidZone
    ? luxon.IANAZone.getAllZoneNames()
    : luxon.DateTime.local().zoneName;

  const tzList = luxon.IANAZone.getAllZoneNames();
  const eventTzSelect = document.getElementById('eventTimezone');
  const participantTzSelect = document.getElementById('participantTimezone');

  tzList.forEach(tz => {
    const opt1 = new Option(tz, tz);
    const opt2 = new Option(tz, tz);
    eventTzSelect.appendChild(opt1);
    participantTzSelect.appendChild(opt2);
  });

  eventTzSelect.value = 'UTC';
  participantTzSelect.value = luxon.DateTime.local().zoneName;

  document.getElementById('eventDate').addEventListener('change', buildGrid);
  eventTzSelect.addEventListener('change', buildGrid);
  participantTzSelect.addEventListener('change', buildGrid);

  function buildGrid() {
    const grid = document.getElementById('grid');
    grid.innerHTML = '';

    const eventTz = eventTzSelect.value;
    const userTz = participantTzSelect.value;
    const date = document.getElementById('eventDate').value;

    if (!date || !eventTz || !userTz) return;

    // Build grid for 24 hours in 15-minute blocks (96 blocks)
    const blocks = 24 * 4;

    for (let i = 0; i < blocks; i++) {
      const dtEvent = DateTime.fromISO(date + 'T00:00', { zone: eventTz }).plus({ minutes: 15 * i });
      const dtUser = dtEvent.setZone(userTz);

      const block = document.createElement('div');
      block.className = 'block';
      block.textContent = dtUser.toFormat('hh:mm a');
      block.dataset.time = dtEvent.toISO();

      block.addEventListener('click', () => {
        block.classList.toggle('selected');
        console.log('Selected:', block.dataset.time);
      });

      grid.appendChild(block);
    }
  }
</script>

</body>
</html>
